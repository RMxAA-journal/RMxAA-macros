











#! /bin/sh
if [ -z $1 ]; then
    echo "Usage: $0 basename"
    exit
fi
BASENAME=$1
ADSBASENAME=${BASENAME}_ads
AUXFILE=$BASENAME.aux
TMPFILE=tmp.$$

echo "Generating $ADSBASENAME.tex"

# For some reason, must double-up \\ to \\\\ but not \ to \\ - odd!
cat > $ADSBASENAME.tex <<EOF
%% PLEASE DO NOT EDIT THIS FILE!  It is generated automatically from
%% the script makeads.sh.  Any hand-edited changes will be lost
%%
\documentclass{article}
\usepackage[latin1]{inputenc}
\usepackage{html}
\usepackage{adshtml}
\newcommand{\ADSfield}[2]{\%#1  #2\\\\}
\newenvironment{ADSarticle}{}{\par\bigskip}
\setlength{\parindent}{0pt}
\newcounter{istage}
\renewcommand{\ion}[2]{\setcounter{istage}{#2}#1 \Roman{istage}}
\begin{document}
\makeatletter
EOF
echo >> $ADSBASENAME.tex "\input{$BASENAME.ads2}"
echo >> $ADSBASENAME.tex "\end{document}"

echo "Generating $ADSBASENAME.sed"

# Find type of journal
grep '\\documentclass\[.*proceedings.*\]' $BASENAME.tex >/dev/null \
     && JOURNAL='RMxAC' \
     || JOURNAL='RMxAA'

# Find the year and volume number
YEAR=`grep '\\SetYear' $BASENAME.tex | sed 's/.*\\SetYear{\(.*\)}.*/\1/'`
VOLUME=`grep '\\SetVolume' $BASENAME.tex | sed 's/.*\\SetVolume{\(.*\)}.*/\1/'`

# Generate an auxilliary sed script
cat > $TMPFILE <<EOF
s|\\\\newlabel{\(.*\):RMAAFirstPage}{{.*}{\(.*\)}}|s/\\\\\\\\ThisVolume{\1}/$YEAR, RMxAC, $VOLUME, \2/g|g
EOF

# Now go through the .aux file, looking for \newlabels and use the sed
# script just generated in order to make another sed script, one that
# will replace \ThisVolume{LABEL} with the correct reference
grep '^\\newlabel{.*:RMAAFirstPage}' $AUXFILE \
     | sed -f $TMPFILE > $ADSBASENAME.sed && rm $TMPFILE

# Apend a further sed command to get rid of \@, since redefining
# it in _ads.tex didn't work
echo >> $ADSBASENAME.sed 's/\\\\@//g'

echo "Generating $BASENAME.ads2 from $ADSBASENAME.sed and $BASENAME.ads"

# Apply this to the .ads file, generating the .ads2 file, which is included
# by the _ads.tex file.
sed -f $ADSBASENAME.sed $BASENAME.ads > $BASENAME.ads2

echo "Generating $ADSBASENAME.txt from $ADSBASENAME.tex and $BASENAME.ads2"

# Now run latex2html on the _ads.tex file
latex2html -no_navigation -info 0 -address 0 -html_version 4.0,math $ADSBASENAME

# Then, convert to plaintext with lynx and tidy it up a bit
lynx --justify=off --width=100 --dump --nolist \
     $ADSBASENAME/$ADSBASENAME.html | cut -c4- \
     | sed 's/ibidrule/\\ibidrule/g' > $ADSBASENAME.txt


